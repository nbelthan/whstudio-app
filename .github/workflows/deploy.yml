name: Deploy to Vercel

on:
  push:
    branches: [main, production]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Test & Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint
        continue-on-error: true

      - name: Run build
        run: npm run build
        env:
          NODE_ENV: production
          # Mock environment variables for build-time static analysis
          DATABASE_URL: "postgresql://mock:mock@localhost:5432/mock"
          POSTGRES_URL: "postgresql://mock:mock@localhost:5432/mock"
          POSTGRES_PRISMA_URL: "postgresql://mock:mock@localhost:5432/mock"
          KV_REST_API_URL: "https://mock.upstash.io"
          KV_REST_API_TOKEN: "mock"
          BLOB_READ_WRITE_TOKEN: "mock"
          AUTH_SECRET: "mock-secret-for-build-only"
          JWT_SECRET: "mock-jwt-secret-for-build-only"
          WORLD_APP_ID: "mock-app-id"
          NEXT_PUBLIC_APP_ID: "mock-app-id"
          NEXT_PUBLIC_API_URL: "https://mock.example.com"
          AUTH_URL: "https://mock.example.com"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: .next/
          retention-days: 1

  # Vercel deployment temporarily disabled - configure secrets to enable
  # deploy-preview:
  #   name: Deploy Preview
  #   runs-on: ubuntu-latest
  #   needs: test
  #   if: github.event_name == 'pull_request'

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Deploy to Vercel (Preview)
  #       uses: amondnet/vercel-action@v25
  #       with:
  #         vercel-token: ${{ secrets.VERCEL_TOKEN }}
  #         vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
  #         vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
  #         scope: ${{ secrets.VERCEL_ORG_ID }}

  # deploy-production:
  #   name: Deploy Production
  #   runs-on: ubuntu-latest
  #   needs: test
  #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Deploy to Vercel (Production)
  #       uses: amondnet/vercel-action@v25
  #       with:
  #         vercel-token: ${{ secrets.VERCEL_TOKEN }}
  #         vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
  #         vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
  #         vercel-args: '--prod'
  #         scope: ${{ secrets.VERCEL_ORG_ID }}

  # notify:
  #   name: Notify Deployment
  #   runs-on: ubuntu-latest
  #   needs: [deploy-production]
  #   if: always()

  #   steps:
  #     - name: Notify Success
  #       if: needs.deploy-production.result == 'success'
  #       run: echo "üöÄ Deployment successful!"

  #     - name: Notify Failure
  #       if: needs.deploy-production.result == 'failure'
  #       run: echo "‚ùå Deployment failed!"